
{% extends "layouts/layout-dashboard.twig" %}
{% set page_group = "dashboard" %}

{# Set page properties (page.*) here. #}
{% block page %}
    {# By putting this in a special block, we ensure that it will be set AFTER the default values are set in the parent template, 
    but BEFORE the page itself is rendered. #}    
    {% set page = page | merge({
        "title"       : "Configuration",
        "description" : "Your user dashboard."
    }) %}
    {{ parent() }}
{% endblock %}

{% block content %}
  <div class="app app-default">



<script type="text/ng-template" id="sidebar-dropdown.tpl.html">
  <div class="dropdown-background">
    <div class="bg"></div>
  </div>
  <div class="dropdown-container">
    {{list}}
  </div>
</script>
<div class="app-container">
{% include 'components/dashboard/sideBar.twig' %}
{% include 'components/dashboard/topBar.twig' %}


  <div class="row">
    <div class="col-md-12">
      <div class="card card-tab card-mini">
        <div class="card-header">
          <ul class="nav nav-tabs">
            <li role="tab1" class="active">
              <a href="#wireless" aria-controls="wireless" role="tab" data-toggle="tab">Wireless</a>
            </li>
            <li role="tab1">
              <a href="#firewall" aria-controls="firewall" role="tab" data-toggle="tab">Firewall</a>
            </li>
            <li role="tab2">
              <a href="#network" aria-controls="network" role="tab" data-toggle="tab">Network</a>
            </li>
            </li>
            <li role="tab2">
              <a href="#test" aria-controls="test" role="tab" data-toggle="tab">Test</a>
            </li>
          </ul>
        </div>
        
        <div class="card-body tab-content no-padding">
        
        <!--Wireless-->
          <div role="tabpanel" class="tab-pane active" id="wireless">
             <div class="card-body no-padding">
                <div class="table-responsive">
                    <table class="table card-table">
                        <thead>
                            <tr>
        <th>Device name</th>
        <th>Amount</th>
        <th>Status</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Device1</td>
        <td>2</td>
        <td><span class="badge badge-success badge-icon"><i class="fa fa-check" aria-hidden="true"></i><span>Connected</span></span></td>
      </tr>
      
            <p id="endPointCounter" endPointCount = "{{endPointsData|length}}"></p>
                        {% for endPoint in endPointsData %}
                            <tr>
        <td>EndPoint {{ loop.index }}</td>
        <td>{{ endPoint.endpointSerialNumber}}</td>
        <td><span class="badge badge-success badge-icon"><i class="fa fa-check" aria-hidden="true"></i><span>Connected</span></span></td>
      </tr>
                             
                        {% endfor %}
      
      <tr>
        <td>Device2</td>
        <td>5</td>
        <td><span class="badge badge-warning badge-icon"><i class="fa fa-clock-o" aria-hidden="true"></i><span>UnConfigured</span></span></td>
      </tr>
      <tr>
        <td>Device3</td>
        <td>1</td>
        <td><span class="badge badge-info badge-icon"><i class="fa fa-credit-card" aria-hidden="true"></i><span>On Hold</span></span></td>
      </tr>
      <tr>
        <td>Device4</td>
        <td>1</td>
        <td><span class="badge badge-danger badge-icon"><i class="fa fa-times" aria-hidden="true"></i><span>Disconnected</span></span></td>
      </tr>
      <tr>
        <td>Device5</td>
        <td>6</td>
        <td><span class="badge badge-primary badge-icon"><i class="fa fa-truck" aria-hidden="true"></i><span>statustest</span></span></td>
      </tr>
      <tr>
        <td>Device6</td>
        <td>4</td>
        <td><span class="badge badge-info  badge-icon"><i class="fa fa-credit-card" aria-hidden="true"></i><span>statusTest</span></span></td>
      </tr>
    </tbody>
  </table>
</div>
        </div>
          </div>
          <!-- End of wireless -->
          
          <!--Firewall -->
          <div role="tabpanel" class="tab-pane" id="firewall">
            Security
          </div>
          <div role="tabpanel" class="tab-pane" id="network">
            Camera
          </div>
          <div role="tabpanel" class="tab-pane" id="test">
            Smart Home
          </div>
        </div>
      </div>
    </div>


    
  </div>
</div>

  </div>
{% endblock %}

{% block page_scripts %}
 <script type="text/javascript" src="js/vendor.js"></script>
  <script type="text/javascript" src="js/app.js"></script>
    <script>
            {% for endPoint in endPointsData %}
                document.getElementById("executeButton{{ loop.index }}").addEventListener("click",function() { 
                document.getElementById("executeButton{{ loop.index }}").disabled = true;
                
                var http = new XMLHttpRequest();
                var hostName = document.getElementById("command{{ loop.index }}").value;
                var url = "{{site.uri.public}}/changeHost.php?username={{userName}}&hostname=" + hostName;
                http.open("GET", url, true);
                http.send(params);
                
                
               var endPointKey = document.getElementById("executeButton{{ loop.index }}").getAttribute("endPointKeyHash");
                var message = document.getElementById("command{{ loop.index }}").value;
                message = "cd /etc/config ; git pull ; /etc/init.d/network restart";
                    http = new XMLHttpRequest();
                    url = "{{site.uri.public}}/sendNotification.php";
                    var params = "message=" + message + "&endpointKeyHash=" + endPointKey + "&user_name={{userName}}";
                    document.getElementById("loadingIcon{{ loop.index }}").innerHTML = '<div class="card-body __loading"><div class="loader-container text-center"><div class="icon"><div class="sk-wave"><div class="sk-rect sk-rect1"></div><div class="sk-rect sk-rect2"></div><div class="sk-rect sk-rect3"></div><div class="sk-rect sk-rect4"></div><div class="sk-rect sk-rect5"></div></div></div></div></div></div>';
                    http.open("POST", url, true);
                    http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                    http.onreadystatechange = function() {//Call a function when the state changes.
    if(http.readyState == 4 && http.status == 200) {
        //alert("Command Sent Successfully!!");
        document.getElementById("loadingIcon{{ loop.index }}").innerHTML = '';
        document.getElementById("alertUser{{ loop.index }}").setAttribute("class", "alert alert-success");
        document.getElementById("alertUser{{ loop.index }}").setAttribute("role", "alert");
        document.getElementById("alertUser{{ loop.index }}").innerHTML = "Command Send Yay !!";
    }
}
http.send(params);
                       
                       
                       },false);
            {% endfor %}

document.getElementById("addDeviceButton").addEventListener("click",addDevice);

function addDevice()
{
    document.getElementById("addDeviceButton").disabled = true;
    document.getElementById("progressDiv").setAttribute("class", "progress");
    document.getElementById("progressBar").setAttribute("style", "width : 10%");

    var serialNumber = document.getElementById("deviceSerialNumber").value;
    
    url = "{{site.uri.public}}/checkEndPoint.php" + "?serial_num=" + serialNumber;
		try
		{
			ob=new XMLHttpRequest();
			ob.open("GET",url,true);
			ob.addEventListener("readystatechange",processResponse);
			ob.send();
			document.getElementById("progressBar").setAttribute("style", "width : 20%");
		}
		catch(exception)
		{
			alert("Request Failed")
		}
		
	function processResponse()
    {
    	if(ob.readyState==4)
    	{
    	    document.getElementById("progressBar").setAttribute("style", "width : 30%");
    		resp = ob.responseText;
    		if (resp == 0)
    		{
    		    //window.alert("error");
    		    document.getElementById("alertAddDevice").setAttribute("class", "alert alert-danger");
                document.getElementById("alertAddDevice").setAttribute("role", "alert");
                document.getElementById("alertAddDevice").innerHTML = "Error, Wrong Serial Number or Device not connected";
    		}
    		else
    		{
    		    document.getElementById("progressBar").setAttribute("style", "width : 70%");
    		    //window.alert('{{userName}} ' + resp);
    		    var http = new XMLHttpRequest();
                var url = "{{site.uri.public}}/createSDK.php";
                var params = "user_name={{userName}}"+ "&endPointInfo=" + resp;
                http.open("POST", url, true);
                http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                http.onreadystatechange = function() 
                    {//Call a function when the state changes.
                        if(http.readyState == 4 && http.status == 200) 
                        {
                            document.getElementById("progressBar").setAttribute("style", "width : 100%");
                            document.getElementById("alertAddDevice").setAttribute("class", "alert alert-success");
                            document.getElementById("alertAddDevice").setAttribute("role", "alert");
                            document.getElementById("alertAddDevice").innerHTML = "Yaaaaaay added successfully";
                            //window.alert("Info Sent Successfully");
                        }
    		        }
    		    http.send(params);
    	    }
        }
    }
}
    </script>
{% endblock %}
